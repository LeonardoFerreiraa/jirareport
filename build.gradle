buildscript {
    ext {
        springBootVersion = "2.1.0.RELEASE"
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: "java"
apply plugin: "idea"
apply plugin: "org.springframework.boot"
apply plugin: "io.spring.dependency-management"
apply plugin: "checkstyle"
apply plugin: "pmd"
apply from: "gradle/tasks/CreateMigration.gradle"

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava.options.encoding = "UTF-8"
compileTestJava.options.encoding = "UTF-8"

repositories {
    mavenCentral()
}

ext {
    gsonVersion = "2.8.1"
    httpClientVersion = "4.5.1"
    springCloudVersion = "Finchley.SR1"
    hibernateTypesVersion = "2.2.0"
    mapstructVersion = "1.2.0.Final"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "com.github.ben-manes.caffeine:caffeine"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.springframework.boot:spring-boot-starter-thymeleaf"
    implementation "nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect"
    implementation "org.thymeleaf.extras:thymeleaf-extras-springsecurity5"

    implementation "org.springframework.boot:spring-boot-devtools"

    implementation "org.apache.httpcomponents:httpclient:${httpClientVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"

    implementation "org.postgresql:postgresql"

    implementation "com.vladmihalcea:hibernate-types-52:${hibernateTypesVersion}"

    implementation "org.mapstruct:mapstruct-jdk8:${mapstructVersion}"
    implementation "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.projectlombok:lombok"

    implementation "org.flywaydb:flyway-core"

    testImplementation "br.com.leonardoferreira:JBacon:1.2.1"
    testImplementation "com.github.javafaker:javafaker:0.16"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.mockito:mockito-junit-jupiter"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

checkstyle {
    toolVersion = "8.11"
    configFile = new File(rootDir, "checkstyle.xml")
}

pmd {
    toolVersion = "6.7.0"
    ruleSets = []
    consoleOutput = true
    ruleSetFiles = files("pmd-ruleset.xml")
}

test {
    useJUnitPlatform()
}

