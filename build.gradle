plugins {
    id "org.jetbrains.kotlin.plugin.jpa" version "1.3.21"
    id "org.springframework.boot" version "2.1.3.RELEASE"
    id "org.jetbrains.kotlin.jvm" version "1.3.21"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.21"
    id "java"
}

apply plugin: "io.spring.dependency-management"
apply from: "gradle/tasks/CreateMigration.gradle"

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

ext {
    gsonVersion = "2.8.1"
    httpClientVersion = "4.5.1"
    springCloudVersion = "Greenwich.RELEASE"
    hibernateTypesVersion = "2.2.0"
    mapstructVersion = "1.3.0.Final"
}

dependencies {
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-security"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "com.github.ben-manes.caffeine:caffeine"
    implementation "org.springframework.boot:spring-boot-starter-actuator"

    implementation "org.springframework.security:spring-security-jwt:1.0.10.RELEASE"

    implementation "org.apache.httpcomponents:httpclient:${httpClientVersion}"
    implementation "com.google.code.gson:gson:${gsonVersion}"

    implementation "org.springframework.cloud:spring-cloud-starter-openfeign"
    implementation "org.springframework.cloud:spring-cloud-starter-sleuth"

    implementation "org.postgresql:postgresql"

    implementation "com.vladmihalcea:hibernate-types-52:${hibernateTypesVersion}"

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation "org.projectlombok:lombok"
    annotationProcessor "org.projectlombok:lombok"

    implementation "org.flywaydb:flyway-core"

    implementation "org.springframework.boot:spring-boot-devtools"
    compileOnly "org.springframework.boot:spring-boot-configuration-processor"

    implementation "com.fasterxml.jackson.module:jackson-module-kotlin"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testImplementation "br.com.leonardoferreira:JBacon:2.0.1"
    testImplementation "com.github.javafaker:javafaker:0.16"
    testImplementation "io.rest-assured:rest-assured"
    testImplementation "com.github.tomakehurst:wiremock:2.19.0"
    testImplementation "org.springframework.security:spring-security-test"
    testImplementation("org.springframework.boot:spring-boot-starter-test") {
        exclude group: "junit", module: "junit"
    }

    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"

    testImplementation "org.mockito:mockito-junit-jupiter"
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        freeCompilerArgs = ["-Xjsr305=strict"]
        jvmTarget = "1.8"
    }
}
